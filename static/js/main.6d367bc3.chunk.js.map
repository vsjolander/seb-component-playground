{"version":3,"sources":["theme.js","Logo.js","SideNav.js","SlideToggle.js","components/DatePicker/styled-components.js","components/DatePicker/DatePickerInputField.js","components/DatePicker/DateButton.js","icons/index.js","components/DatePicker/DatePickerModalHeader.js","components/DatePicker/DatePickerModalFooter.js","components/DatePicker/DatePickerModal.js","components/DatePicker/consts.js","components/DatePicker/reducer.js","components/DatePicker/index.js","App.js","index.js"],"names":["theme","mobile","desktop","sideNavWith","colors","green","darkgreen1","darkgreen2","yellow","darkyellow1","darkyellow2","purple","darkpurple1","darkpurple2","red","darkred1","darkred2","blue","darkblue1","darkblue2","grey","100","200","300","400","500","600","700","800","900","Logo","width","height","viewBox","xmlns","d","fill","_ngcontent-rmj-c2","SideNavContainer","styled","div","props","SideNavHeader","SideNavHeaderText","SideNavSectionHeader","SideNavLink","NavLink","SideNavWrapper","routes","components","name","path","SideNav","map","item","to","activeClassName","key","children","SlideToggleWrapper","isOn","SlideToggleSwitch","input","SlideToggleLabel","label","SlideToggle","initialState","ariaLabel","useState","setIsOn","onClick","e","preventDefault","state","type","aria-label","className","ViewSlideToggle","action","ModalEnterAnimation","keyframes","DatePickerModalContainer","modalPosition","y","x","DatePickerModalHeaderContainer","DatePickerModalFooterContainer","DatePickerModalBody","FlatButton","button","DateButtonPlaceholder","DateButtonWrapper","adjecentMonth","disabled","active","DateButtonContent","DatepickerCalendarGrid","WeekdayContainer","DatePickerOverlay","DatePickerInputField","console","log","inputElement","useRef","Fragment","htmlFor","placeholder","value","format","selectedDate","onChange","toggleIsOpen","rect","current","getBoundingClientRect","setModalPosition","ref","DateButton","IconClose","IconLeft","IconRight","DatePickerModalHeader","DatePickerModalFooter","months","years","DatePickerModal","dispatch","daysInMonth","getDaysInMonth","Date","browsingDate","Dropdown","list","selectedValue","payload","parseInt","previousMonthDays","dateString","date","prevMonth","getMonth","setMonth","getPreviousMonthDays","firstDayInBrowsingDateMonth","Array","from","length","index","subMonths","setDate","reverse","renderPreviousMonthDays","buttonDate","dateIsoString","buttonDateString","toISOString","isEqual","isSunday","getDate","lastDayInBrowsingDateMonth","addMonths","renderNextMonthDays","calendarReducer","stateDate","month","year","getDay","startOfMonth","lastDayOfMonth","getFullYear","setFullYear","Error","modalRoot","document","getElementById","DatePicker","setHours","isOpen","setIsOpen","useReducer","ReactDOM","createPortal","ViewDatePicker","App","basename","render","StrictMode"],"mappings":"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","file":"static/js/main.6d367bc3.chunk.js","sourcesContent":["const theme = {\n    mobile: {},\n    desktop: {\n        sideNavWith: 300\n    },\n    colors: {\n        green: '#60cd18',\n        darkgreen1: '#45b400',\n        darkgreen2: '#379d00',\n        yellow: '#ffc500',\n        darkyellow1: '#ffb400',\n        darkyellow2: '#f8a000',\n        purple: '#673ab6',\n        darkpurple1: '#4f2c99',\n        darkpurple2: '#3f2587',\n        red: '#f03529',\n        darkred1: '#d81a1a',\n        darkred2: '#bb000c',\n        blue: '#41b0ee',\n        darkblue1: '#0092e1',\n        darkblue2: '#007ac7',\n        grey: {\n            100: '#f8f8f8',\n            200: '#e9e9e9',\n            300: '#dedede',\n            400: '#cecece',\n            500: '#adadad',\n            600: '#868686',\n            700: '#494949',\n            800: '#333333',\n            900: '#1a1a1a',\n        }\n    }\n}\n\nexport default theme;","import * as React from 'react';\n\nconst Logo = () => (<svg width=\"56\" height=\"56\" viewBox=\"0 0 800 800\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 0h800v800H0z\" fill=\"#60cd18\"></path><path _ngcontent-rmj-c2=\"\" d=\"M290.55 348.35l-25.87 19.32c-12.22-10.51-28-12.57-36.65-12.57s-18 2.51-19.37 8.82c-1.38 6.12 4.31 10.88 14.08 13.53 11.14 3 21.29 5.66 36.92 10.12 23.24 6.63 39.13 16.69 39.13 40 0 32.14-28.53 48.8-66.75 48.8s-64.26-19.91-72-29.2l27.35-20.45c19.21 16.75 32.57 19.11 43.74 19.11 12.81 0 24.79-2.75 26.33-10 1.25-5.82-3.58-10.45-14.49-13-12.35-2.85-22.77-5.14-34.4-8.2-31.52-8.27-40.41-26.6-40.41-43.06 0-22.67 21.1-45.95 59.69-45.95 39.57 0 62.74 22.67 62.74 22.67m164.9-20.4H340.12V472.1h117.45v-33.24h-76.94v-23.22h53v-31.8h-53v-23h74.83zM310.27 505.37h9V294.63h-9zm162.45 0h9V294.63h-9zm29.8-33.27h92.64c24.77 0 44.84-14.93 44.84-38.84 0-18.65-12.21-31-29.32-36.47a9.6 9.6 0 0 0-1.66-.21 10.36 10.36 0 0 0 1.66-.29c9.8-3.88 20.66-14.21 20.66-31.8 0-22.31-19.74-36.54-44.1-36.54h-84.72zm40.7-114.17h32.36c7.45 0 13.48 5.88 13.48 12.64s-6 12.66-13.48 12.66h-32.36zm39.58 82.13h-39.58v-26.29h39.58a13.15 13.15 0 0 1 0 26.28z\" fill=\"#fff\"></path></svg>)\n\nexport default Logo;","import * as React from 'react';\nimport styled from 'styled-components';\nimport {NavLink} from 'react-router-dom'\n\nimport Logo from './Logo'\n\nconst SideNavContainer = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: ${props => props.theme.desktop.sideNavWith}px;\n    height: 100%;\n    background: #000;\n    display: flex;\n    flex-direction: column;\n    transform: translate(-100%);\n\n    @media screen and (min-width: 720px) {\n        transform: translate(0%);\n    }\n`;\n\nconst SideNavHeader = styled.div`\n    color: #fff;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    height: 56px;\n    width: 100%;\n    margin-bottom: 40px;\n`;\n\nconst SideNavHeaderText = styled.div`\n    color: #fff;\n    font-weight: 600;\n    padding-left: 16px;\n`;\n\nconst SideNavSectionHeader = styled.div`\n    color: #fff;\n    font-weight: 600;\n    padding: 16px 0 16px 16px;\n    font-size: 12px;\n`;\n\nconst SideNavLink = styled(NavLink)`\n    color: #fff;\n    font-weight: 500;\n    padding: 8px 8px 8px 16px;\n    font-size: 16px;\n\n    &.active {\n        background-color: #2E8500;\n    }\n\n    &:hover {\n        color: #fff;\n        text-decoration: none;\n    }\n`;\n\nconst SideNavWrapper = styled.div`\n    width: 100%;\n    @media screen and (min-width: 720px) {\n        padding-left: ${props => props.theme.desktop.sideNavWith}px;\n    }\n`\n\nconst routes = {\n    components: [\n        {\n            name: \"Slide toggle\",\n            path: \"slide-toggle\"\n        },\n        {\n            name: \"Date picker\",\n            path: \"date-picker\"\n        },\n    ]\n}\n\nconst SideNav = (props) => {\n    return (\n        <SideNavWrapper>\n        <SideNavContainer>\n            <SideNavHeader>\n                <Logo />\n                <SideNavHeaderText>Component Playground</SideNavHeaderText>\n            </SideNavHeader>\n            <SideNavSectionHeader>Components</SideNavSectionHeader>\n            {routes.components.map( item => <SideNavLink to={item.path} activeClassName=\"active\" key={item.path}>{item.name}</SideNavLink>)}\n        </SideNavContainer>\n        {props.children}\n        </SideNavWrapper>\n    );\n}\n\nexport default SideNav;","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nconst SlideToggleWrapper = styled.div`\n  border: 0.0625rem solid #cecece;\n  border-radius: 0.25rem;\n  outline: none;\n  box-sizing: border-box;\n  min-height: 2.75rem;\n  line-height: 1.5;\n  font-size: 1rem;\n  font-family: \"SEBSansSerif\", Arial, sans-serif;\n  display: inline-block;\n  border-color: transparent;\n  height: auto;\n  position: relative;\n  padding-left: 2.75rem;\n  min-height: 2rem;\n  \n  &, & > * {\n    cursor: pointer;\n  }\n\n  &:hover input {\n    & + label::after {\n      left: ${props => props.isOn ? '1.125' : '.375'}rem;\n    }\n\n    & + label::before {\n      background-color: ${props => props.isOn ? props.theme.colors.darkgreen2 : props.theme.colors.grey[500]};\n    }\n  }\n`\nconst SlideToggleSwitch = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  opacity: 0;\n  z-index: -1;\n  position: absolute;\n\n  &:focus + label:before {\n    box-shadow: 0px 0px 4px 1px ${props => props.theme.colors.blue};\n    border: 1px solid ${props => props.theme.colors.darkblue2};\n  }\n`;\n\nconst SlideToggleLabel = styled.label`\n  display: inline-block;\n  border-radius: 0.25rem;\n  position: relative;\n  min-height: 2rem;\n  padding-left: 0.5rem;\n  position: initial;\n  line-height: 2rem;\n\n  &::before {\n    background-color: ${props => props.isOn ? props.theme.colors.darkgreen1 : props.theme.colors.grey[400]};\n    display: block;\n    content: '';\n    margin: 0 0.5rem -0.125rem 0;\n    position: absolute;\n    visibility: visible;\n    outline: none;\n    font-size: 1rem;\n    border: 0.0625rem solid #adadad;\n    transition: 250ms;\n    width: 2.5rem;\n    height: 1.25rem;\n    border-radius: 1.25rem;\n    top: 0.625rem;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    border: none;\n    height: 1.5rem;\n    width: 2.75rem;\n  }\n\n  &:after {\n    background-color: #fff;\n    border-radius: 50%;\n    border: 0.1875rem solid #fff;\n    bottom: 0;\n    box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.15), 0px 1px 0px 0px rgba(0, 0, 0, 0.06);\n    content: '';\n    display: block;\n    height: 1.25rem;\n    left: ${props => props.isOn ? '1.375' : '0.125'}rem;\n    margin: auto;\n    position: absolute;\n    top: 0;\n    transition: 150ms ease-in-out;\n    width: 1.25rem;\n  }\n\n`;\n\nconst SlideToggle = ({initialState = false, ariaLabel = '', key=''}) => {\n\n  const [isOn, setIsOn] = useState(initialState);\n  \n  const toggleIsOn = () => {\n    setIsOn(state => !state);\n  }\n\n  return (\n    <SlideToggleWrapper isOn={isOn} key={key} onClick={(e) => {\n      e.preventDefault();\n      toggleIsOn()\n    }} >\n      <SlideToggleSwitch isOn={isOn} type=\"checkbox\" aria-label={ariaLabel} />\n      <SlideToggleLabel isOn={isOn} className=\"custom-control-label form-check-label\">{isOn ? 'On' : 'Off'}</SlideToggleLabel> \n    </SlideToggleWrapper>\n  )\n}\n\nconst ViewSlideToggle = () => (\n    <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1 className=\"mt-5\">Slide Toggle</h1>\n          </div>\n        </div>\n        <div className=\"row mt-5\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h3>\n                  Default\n                </h3>\n              </div>\n              <div className=\"card-body\">\n                <form action=\"\">\n                  <div className=\"form-group\">\n                    <SlideToggle />\n                  </div>\n                </form>\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n)\n\nexport default ViewSlideToggle;","import styled, {keyframes} from 'styled-components';\n\nconst ModalEnterAnimation = keyframes`\n  0% {\n    transform: translateY(5%);\n    opacity: 0;\n  }\n`;\n\nexport const DatePickerModalContainer = styled.div`\n  border-radius: 0.25em;\n  min-width: 18.75em;\n  width: 300px;\n  position: absolute;\n  box-shadow: 0 2px 6px 0px rgba(0,0,0,.15);\n  background-color: #ffffff;\n  z-index: 1001;\n  top: ${props => props.modalPosition && props.modalPosition.y}px;\n  left: ${props => props.modalPosition && props.modalPosition.x}px;\n\n  @media (max-width: 767px) {\n    min-width: 100%;\n    border-width: 0;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: #fff;\n    animation: ${ModalEnterAnimation} .15s ease-in-out;\n  }\n\n  .sdv-datepicker__controls {\n    align-items: center;\n  }\n\n  .custom-dropdown {\n    margin: 0;\n    height: 24px;\n  }\n\n  .custom-dropdown>.custom-dropdown-toggle {\n    border-color: transparent;\n    font-size: 0.875rem;\n    height: 24px;\n  }\n\n  .custom-dropdown>.custom-dropdown-toggle>.right-items>.dropdown-icon-holder {\n    height: 24px;\n    width: 24px;\n  }\n\n  .custom-dropdown>.custom-dropdown-toggle>.title {\n    font-weight: 500;\n  }\n\n  .custom-dropdown>.custom-dropdown-toggle>.right-items>.dropdown-icon-holder>svg {\n    fill: #000000;\n    width: 12px;\n    height: 12px;\n  }\n`;\n\nexport const DatePickerModalHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 3.5rem;\n  padding: 0.5rem 1rem;\n  font-size: 1.5rem;\n  font-weight: 500;\n  border-bottom: 1px solid ${(props) => props.theme.colors.grey[200]};\n\n  @media (min-width: 576px) {\n    display: none;\n  }\n`;\n\nexport const DatePickerModalFooterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 3rem;\n  padding: 0.5rem 1rem;\n  border-top: 1px solid ${(props) => props.theme.colors.grey[200]};\n`;\n\nexport const DatePickerModalBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0.5rem 0;\n  height: calc(100% - 6.5rem);\n`;\n\nexport const FlatButton = styled.button`\n  border: none;\n  background: #fff;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid transparent;\n\n  &:focus {\n    border: 1px solid ${props => props.theme.colors.darkblue2};\n    outline: none;\n    box-shadow: 0 0 4px 1px ${props => props.theme.colors.blue};\n    z-index: 1;\n  }\n`;\n\nexport const DateButtonPlaceholder = styled.div`\n  padding-bottom: 100%;\n  height: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`\n\nexport const DateButtonWrapper = styled(FlatButton)`\n  padding-bottom: 100%;\n  height: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  font-weight: ${props => {\n    if(props.adjecentMonth) return 400;\n    return 500\n  }};\n  color: ${props => {\n    if(props.adjecentMonth) return props.theme.colors.grey[800];\n    if(props.disabled) return '#B3B3B3';\n    if(props.active) return '#FFFFFF';\n    return '#444444'\n  }};\n  background: ${props => {\n    if(props.disabled ) return props.theme.colors.grey[100]\n    if(props.active) return '#000000'\n    return '#FFFFFF';\n  }};\n`\n\nexport const DateButtonContent = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 0.875rem;\n  font-weight: 500;\n`\n\nexport const DatepickerCalendarGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  padding: 0 1rem;\n  \n  @media (min-width: 576px) {\n    padding: 0 .25rem;\n  }\n;`\n\nexport const WeekdayContainer = styled.div`\n  text-align: center;\n  font-size: 0.875rem;\n  font-weight: 500;\n  padding: .5rem 0;\n`\n\n\nexport const DatePickerMonthLabel = styled.div`\n  background: ${(props) => props.theme.colors.grey[200]};\n  padding: .5rem 1rem;\n  font-size: .75rem;\n  margin-bottom: .25rem;\n\n  @media (min-width: 576px) {\n    display: none;\n  }\n`\n\nexport const DatePickerOverlay = styled.div`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 1000;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity .4s cubic-bezier(.25,.8,.25,1);\n    opacity: 0;\n`\n\nexport const DatePickerFooterButton = styled.button`\n  background: #fff;\n`;","import React, {useRef} from 'react';\nimport {format} from 'date-fns'\nconst DatePickerInputField = (props) => {\n    console.log(props.state);\n    const inputElement = useRef(null);\n\n    return (\n        <React.Fragment>\n        <label htmlFor=\"input-field\" className=\"sdv-field-label\">\n            {props.label && (typeof props.label == 'string') && props.label}\n        </label>\n        <input\n            className=\"sdv-field\"\n            placeholder={props.placeholder && (typeof props.placeholder == 'string') && props.placeholder}\n            value={format(props.state.selectedDate, 'yyyy-MM-dd')}\n            onChange={() => {}}\n            onClick={() => {\n                props.toggleIsOpen()\n                const rect = inputElement.current.getBoundingClientRect();\n                props.setModalPosition({x: rect.x, y: rect.y + rect.height})\n            }}\n            ref={inputElement}\n        />\n      </React.Fragment>\n    )\n}\n\nexport default DatePickerInputField;","import React from 'react';\nimport {\n    DateButtonWrapper,\n    DateButtonContent\n} from \"./styled-components\";\n\nconst DateButton = (props) => (\n    <DateButtonWrapper {...props}>\n      <DateButtonContent>{props.children}</DateButtonContent>\n    </DateButtonWrapper>\n);\n\nexport default DateButton;","import React from 'react';\n\nexport const IconClose = (props) => <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\" width={props.width ? `${props.width}px` : '24px'} height={props.height ? `${props.height}px` : '24px'}><path fill={props.fill} d=\"M193.94 256L296.5 153.44l21.15-21.15c3.12-3.12 3.12-8.19 0-11.31l-22.63-22.63c-3.12-3.12-8.19-3.12-11.31 0L160 222.06 36.29 98.34c-3.12-3.12-8.19-3.12-11.31 0L2.34 120.97c-3.12 3.12-3.12 8.19 0 11.31L126.06 256 2.34 379.71c-3.12 3.12-3.12 8.19 0 11.31l22.63 22.63c3.12 3.12 8.19 3.12 11.31 0L160 289.94 262.56 392.5l21.15 21.15c3.12 3.12 8.19 3.12 11.31 0l22.63-22.63c3.12-3.12 3.12-8.19 0-11.31L193.94 256z\"/></svg>;\n\nexport const IconLeft = (props) => <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192 512\" width={props.width ? `${props.width}px` : '24px'} height={props.height ? `${props.height}px` : '24px'}><path fill={props.fill} d=\"M25.1 247.5l117.8-116c4.7-4.7 12.3-4.7 17 0l7.1 7.1c4.7 4.7 4.7 12.3 0 17L64.7 256l102.2 100.4c4.7 4.7 4.7 12.3 0 17l-7.1 7.1c-4.7 4.7-12.3 4.7-17 0L25 264.5c-4.6-4.7-4.6-12.3.1-17z\"/></svg>;\n\nexport const IconRight = (props) => <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192 512\" width={props.width ? `${props.width}px` : '24px'} height={props.height ? `${props.height}px` : '24px'}><path fill={props.fill} d=\"M166.9 264.5l-117.8 116c-4.7 4.7-12.3 4.7-17 0l-7.1-7.1c-4.7-4.7-4.7-12.3 0-17L127.3 256 25.1 155.6c-4.7-4.7-4.7-12.3 0-17l7.1-7.1c4.7-4.7 12.3-4.7 17 0l117.8 116c4.6 4.7 4.6 12.3-.1 17z\"/></svg>;","import React from 'react';\nimport {DatePickerModalHeaderContainer, FlatButton} from './styled-components';\nimport { IconClose } from \"../../icons\";\n\nconst DatePickerModalHeader = ({ toggleIsOpen }) => {\n    return (\n      <DatePickerModalHeaderContainer>\n        Date Picker Header\n        <FlatButton onClick={() => toggleIsOpen()}>\n          <IconClose />\n        </FlatButton>\n      </DatePickerModalHeaderContainer>\n    );\n  };\n\n  export default DatePickerModalHeader;","import React from 'react';\nimport {DatePickerModalFooterContainer} from './styled-components'\n\nconst DatePickerModalFooter = ({ toggleIsOpen }) => {\n  return (\n    <DatePickerModalFooterContainer>\n\n    </DatePickerModalFooterContainer>\n  );\n};\n\nexport default DatePickerModalFooter;","import React, {useReducer} from 'react';\nimport {\n    format,\n    getDaysInMonth,\n    isEqual,\n    isSunday,\n    addMonths,\n    subMonths,\n  } from \"date-fns\";\nimport { Dropdown } from \"@sebgroup/react-components/dist/Dropdown\";\nimport {\n    DatePickerModalContainer,\n    DatePickerModalBody,\n    FlatButton,\n    DatepickerCalendarGrid,\n    DateButtonPlaceholder,\n    WeekdayContainer\n  } from \"./styled-components\";\n  import DateButton from './DateButton'\n  import DatePickerModalHeader from './DatePickerModalHeader'\n  import DatePickerModalFooter from './DatePickerModalFooter'\n  import {IconLeft, IconRight} from '../../icons'\n  import {SELECT_DATE, PREVIOUS_MONTH, NEXT_MONTH} from './consts'\n\n  const months = [\n    { value: \"01\", label: \"January\" },\n    { value: \"02\", label: \"Febuary\" },\n    { value: \"03\", label: \"Mars\" },\n    { value: \"04\", label: \"April\" },\n    { value: \"05\", label: \"May\" },\n    { value: \"06\", label: \"June\" },\n    { value: \"07\", label: \"Juli\" },\n    { value: \"08\", label: \"August\" },\n    { value: \"09\", label: \"September\" },\n    { value: \"10\", label: \"October\" },\n    { value: \"11\", label: \"November\" },\n    { value: \"12\", label: \"December\" },\n  ];\n  \n  const years = [\n    { value: \"2020\", label: \"2020\" },\n    { value: \"2021\", label: \"2021\" },\n    { value: \"2022\", label: \"2022\" },\n    { value: \"2023\", label: \"2023\" },\n    { value: \"2024\", label: \"2024\" },\n    { value: \"2025\", label: \"2025\" },\n  ];\n\nconst getPreviousMonthDays = (dateString) => {\n  const date = new Date(dateString);\n  const prevMonth = date.getMonth() - 1;\n  date.setMonth(prevMonth);\n  return getDaysInMonth(date);\n}\n\nconst DatePickerModal = ({ toggleIsOpen, selectedDate, modalPosition, state, dispatch }) => {\n    const showFooter = false;\n  \n    const daysInMonth = getDaysInMonth(new Date(state.browsingDate));\n  \n    const isActiveDate = (dateIsoString) => isEqual(new Date(dateIsoString), new Date(state.selectedDate));\n  \n    const renderPreviousMonthDays = () => {\n      let previousDaysArray;\n      const previousMonthDays = getPreviousMonthDays(state.browsingDate)\n  \n      if (state.firstDayInBrowsingDateMonth === 0) {\n        previousDaysArray = Array.from({ length: 6 });\n      } else {\n        previousDaysArray = Array.from({\n          length: parseInt(state.firstDayInBrowsingDateMonth) - 1,\n        });\n      }\n  \n      return previousDaysArray.map((item, index) => {\n        const buttonDate = subMonths(new Date(state.browsingDate), 1);\n        buttonDate.setDate(previousMonthDays - index)\n        return <DateButtonPlaceholder key={index} />\n        }).reverse();\n    };\n  \n    const renderNextMonthDays = () => {\n  \n      if (state.lastDayInBrowsingDateMonth === 0) {\n        return;\n      }\n  \n      const nextDaysArray = Array.from({\n        length: 7 - parseInt(state.lastDayInBrowsingDateMonth),\n      });\n  \n      return nextDaysArray.map((item, index) => {\n        const buttonDate = addMonths(new Date(state.browsingDate), 1);\n        const date = index + 1;\n        buttonDate.setDate(date)\n        return <DateButtonPlaceholder />\n      });\n    };\n  \n    const renderDays = () => {\n          return Array.from({ length: daysInMonth }).map((item, index) => {\n            const buttonDate = new Date(state.browsingDate);\n            buttonDate.setDate(index + 1);\n            const buttonDateString = buttonDate.toISOString();\n            \n          return <DateButton\n                    key={`flat-button-${index}`}\n                    active={isActiveDate(buttonDateString)}\n                    date={buttonDateString}\n                    onClick={() => {\n                      dispatch({type: SELECT_DATE, payload: buttonDateString})\n                    }}\n                    disabled={(() => {\n                      if(isEqual(buttonDate, state.selectedDate)) return false;  \n                      if(isSunday(buttonDate)) return true;  \n                      return (buttonDate.getDate() === 10)\n                    })()}\n                  >\n                      {index + 1}\n                  </DateButton>\n      });\n    };\n  \n    return (\n      <DatePickerModalContainer modalPosition={modalPosition}>\n        <DatePickerModalHeader toggleIsOpen={toggleIsOpen} />\n        <DatePickerModalBody>\n            <div className=\"sdv-datepicker__controls\">\n              <FlatButton onClick={() => dispatch({type: PREVIOUS_MONTH})}>\n                <IconLeft width=\"18\" height=\"18\" fill=\"#000000\" />\n              </FlatButton>\n              <Dropdown\n                list={months}\n                selectedValue={{\n                  value: format(new Date(state.browsingDate), \"MM\"),\n                  label: format(new Date(state.browsingDate), \"MMMM\"),\n                }}\n                onChange={(value) => {\n                  dispatch({\n                    type: \"SET_MONTH\",\n                    payload: parseInt(value.value) - 1,\n                  });\n                }}\n              />\n              <Dropdown\n                list={years}\n                selectedValue={{\n                  value: format(new Date(state.browsingDate), \"yyyy\"),\n                  label: format(new Date(state.browsingDate), \"yyyy\"),\n                }}\n                onChange={(value) => {\n                  dispatch({\n                    type: \"SET_YEAR\",\n                    payload: parseInt(value.value),\n                  });\n                }}\n              />\n              <FlatButton onClick={() => dispatch({type: NEXT_MONTH})} >\n                <IconRight width=\"18\" height=\"18\" fill=\"#000000\" />\n              </FlatButton>\n            </div>\n            <DatepickerCalendarGrid>\n              <WeekdayContainer>Mon</WeekdayContainer>\n              <WeekdayContainer>Tue</WeekdayContainer>\n              <WeekdayContainer>Wed</WeekdayContainer>\n              <WeekdayContainer>Thu</WeekdayContainer>\n              <WeekdayContainer>Fri</WeekdayContainer>\n              <WeekdayContainer>Sat</WeekdayContainer>\n              <WeekdayContainer>Sun</WeekdayContainer>\n            </DatepickerCalendarGrid>\n            <DatepickerCalendarGrid>\n              {renderPreviousMonthDays()}\n              {renderDays()}\n              {renderNextMonthDays()}\n            </DatepickerCalendarGrid>\n            \n        </DatePickerModalBody>\n        <DatePickerModalFooter />\n      </DatePickerModalContainer>\n    );\n  };\n\n  export default DatePickerModal;","export const SET_MONTH =\"SET_MONTH\";\nexport const NEXT_MONTH =\"NEXT_MONTH\";\nexport const PREVIOUS_MONTH =\"PREVIOUS_MONTH\";\nexport const SET_YEAR =\"SET_YEAR\";\nexport const SELECT_DATE =\"SELECT_DATE\";\nexport const PREVIOUS_MONTH_SELECT_DATE =\"PREVIOUS_MONTH_SELECT_DATE\";\nexport const NEXT_MONTH_SELECT_DATE = \"NEXT_MONTH_SELECT_DATE\";","import {\n    getDay,\n    lastDayOfMonth,\n    startOfMonth\n  } from \"date-fns\";\n\nconst calendarReducer = (state, action) => {\n    let stateDate, month, year, selectedDate;\n      \n    switch (action.type) {\n      case \"SELECT_DATE\":\n        const {payload} = action;\n      return {\n        ...state,\n        selectedDate: new Date(payload)\n      };\n      case \"SET_MONTH\":\n        stateDate = new Date(state.browsingDate);\n        stateDate.setMonth(action.payload);\n        return {\n          ...state,\n          browsingDate: stateDate.toISOString(),\n          firstDayInBrowsingDateMonth: getDay(startOfMonth(stateDate)),\n          lastDayInBrowsingDateMonth: getDay(lastDayOfMonth(stateDate)),\n        };\n      case \"NEXT_MONTH\":\n        stateDate = new Date(state.browsingDate);\n        month = stateDate.getMonth();\n        year = stateDate.getFullYear();\n        month++;\n        if (month === 12) {\n          month = 0;\n          year++;\n        }\n        stateDate.setMonth(month);\n        stateDate.setFullYear(year);\n        return {\n          ...state,\n          browsingDate: stateDate.toISOString(),\n          firstDayInBrowsingDateMonth: getDay(startOfMonth(stateDate)),\n          lastDayInBrowsingDateMonth: getDay(lastDayOfMonth(stateDate)),\n        };\n      case \"NEXT_MONTH_SELECT_DATE\":\n          stateDate = new Date(state.browsingDate);\n          month = stateDate.getMonth();\n          year = stateDate.getFullYear();\n          month++;\n          if (month === 12) {\n            month = 0;\n            year++;\n          }\n          stateDate.setMonth(month);\n          stateDate.setFullYear(year);\n          selectedDate = new Date(stateDate);\n          selectedDate.setDate(action.payload)\n          return {\n            ...state,\n            selectedDate,\n            browsingDate: stateDate.toISOString(),\n            firstDayInBrowsingDateMonth: getDay(startOfMonth(stateDate)),\n            lastDayInBrowsingDateMonth: getDay(lastDayOfMonth(stateDate)),\n          };\n      case \"PREVIOUS_MONTH\":\n        stateDate = new Date(state.browsingDate);\n        month = stateDate.getMonth();\n        year = stateDate.getFullYear();\n        month--;\n  \n        if (month === -1) {\n          month = 11;\n          year--;\n        }\n  \n        stateDate.setMonth(month);\n        stateDate.setFullYear(year);\n        return {\n          ...state,\n          browsingDate: stateDate.toISOString(),\n          firstDayInBrowsingDateMonth: getDay(startOfMonth(stateDate)),\n          lastDayInBrowsingDateMonth: getDay(lastDayOfMonth(stateDate)),\n        };\n      case \"PREVIOUS_MONTH_SELECT_DATE\":\n        stateDate = new Date(state.browsingDate);\n        month = stateDate.getMonth();\n        year = stateDate.getFullYear();\n        month--;\n  \n        if (month === -1) {\n          month = 11;\n          year--;\n        }\n  \n        stateDate.setMonth(month);\n        stateDate.setFullYear(year);\n        \n        selectedDate = new Date(stateDate);\n        selectedDate.setDate(action.payload)\n        return {\n          ...state,\n          selectedDate,\n          browsingDate: stateDate.toISOString(),\n          firstDayInBrowsingDateMonth: getDay(startOfMonth(stateDate)),\n          lastDayInBrowsingDateMonth: getDay(lastDayOfMonth(stateDate)),\n        };\n      case \"SET_YEAR\":\n        stateDate = new Date(state.browsingDate);\n        stateDate.setFullYear(action.payload);\n        return {\n          ...state,\n          browsingDate: stateDate.toISOString(),\n          firstDayInBrowsingDateMonth: getDay(startOfMonth(stateDate)),\n          lastDayInBrowsingDateMonth: getDay(lastDayOfMonth(stateDate)),\n        };\n      default:\n        throw new Error();\n    }\n  };\n\n  export default calendarReducer;","import React, { Fragment, useState, useReducer } from \"react\";\nimport ReactDOM from 'react-dom';\nimport {\n  getDay,\n  lastDayOfMonth,\n  startOfMonth\n} from \"date-fns\";\nimport {\n  DatePickerOverlay\n} from \"./styled-components\";\nimport DatePickerInputField from './DatePickerInputField';\nimport DatePickerModal from './DatePickerModal'\nimport calendarReducer from './reducer'\n\n\nconst modalRoot = document.getElementById('modal-root');\n\n\nconst initialState = {\n  browsingDate: startOfMonth(new Date()),\n  selectedDate: new Date(),\n  firstDayInBrowsingDateMonth: getDay(startOfMonth(new Date())),\n  lastDayInBrowsingDateMonth: getDay(lastDayOfMonth(new Date())),\n};\n\nconst DatePicker = () => {\n  initialState.selectedDate.setHours(0,0,0,0);\n  const [isOpen, setIsOpen] = useState(false);\n  const [modalPosition, setModalPosition] = useState({x: 0, y: 0});\n  const [state, dispatch] = useReducer(calendarReducer, initialState);\n\n  const toggleIsOpen = () => {\n    setIsOpen((state) => !state);\n  };\n\n  return (\n    <Fragment>\n      <DatePickerInputField toggleIsOpen={toggleIsOpen} setModalPosition={setModalPosition} state={state} />\n      {isOpen && ReactDOM.createPortal(\n        <div>\n          <DatePickerOverlay onClick={ () => setIsOpen(false) } />\n          <DatePickerModal\n            modalPosition={modalPosition}\n            toggleIsOpen={toggleIsOpen}\n            state={state}\n            dispatch={dispatch}\n          />\n        </div>,\n        modalRoot\n      )}\n    </Fragment>\n  );\n};\n\nconst ViewDatePicker = () => (\n  <Fragment>\n  <div className=\"container-fluid\">\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <DatePicker />\n      </div>\n    </div>\n  </div>\n  <div></div>\n  </Fragment>\n);\n\nexport default ViewDatePicker;\n","import React from \"react\";\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'\nimport {ThemeProvider} from 'styled-components'\nimport theme from './theme'\nimport \"./App.scss\";\nimport SideNav from './SideNav'\nimport ViewSlideToggle from './SlideToggle'\nimport ViewDatePicker from './components/DatePicker'\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router basename='/'>\n        <SideNav>\n        <Switch>\n          <Route path=\"/slide-toggle\">\n            <ViewSlideToggle />\n          </Route>\n          <Route path=\"/date-picker\">\n            <ViewDatePicker />\n          </Route>\n        </Switch>\n        </SideNav>\n      </Router>\n      </ThemeProvider> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}